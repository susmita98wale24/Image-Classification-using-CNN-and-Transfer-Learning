# Import necessary libraries
import tensorflow as tf
import numpy as np
from tensorflow.keras.preprocessing import image
import streamlit as st 

# Load the pre-trained model
model = tf.keras.models.load_model('model(2).h5')
class_names = ['Basmati', 'Arborio', 'Jasmine', 'Ipsala','Karacadag']

# Define image preprocessing function

def predict_rice_type(pil_img: Image.Image) -> str:
    # Convert PIL image to BytesIO
    img_bytes = BytesIO()
    pil_img.save(img_bytes, format='JPEG')
    img_bytes.seek(0)

    # Load and preprocess image
    img = image.load_img(img_bytes, target_size=(128, 128))
    img_array = image.img_to_array(img) / 255.0
    img_array = np.expand_dims(img_array, axis=0)

    prediction = model.predict(img_array)
    return class_names[np.argmax(prediction)]

# Web interface logic (Streamlit)
st.title("Rice Grain Classifier")
file = st.file_uploader("Upload Rice Image", type=["jpg", "png"])

if file:
    image = Image.open(file)
    st.image(image, caption="Uploaded Image", use_column_width=True)
    prediction = predict_rice_type(image)
    st.write(f"Prediction: **{prediction}**")
